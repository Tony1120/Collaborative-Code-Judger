{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routing } from './app.routes';\nimport {FormsModule} from '@angular/forms'\nimport {HttpClientModule} from'@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport {DataService} from './services/data.service';\nimport {CollaborationService} from './services/collaboration.service'\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n  \tDataService,\n    CollaborationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n\n","import { Routes, RouterModule} from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes =[\n\t{\n\t\tpath: '',\n\t\tredirectTo: 'problems',\n\t\tpathMatch: 'full' // excatly match\n\t},\n\t{\n\t\tpath: 'problems',\n\t\tcomponent: ProblemListComponent\n\t},\n\t{\n\t\tpath: 'problems/:id', // :id is parameter e.g. problems/1 (id=1)\n\t\tcomponent: ProblemDetailComponent\n\t},\n\t{\n\t\tpath:'**', // any other routes redirect to 'problem'\n\t\tredirectTo: 'problems'\n\t}\n]\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"@media screen {\\n\\t#editor {\\n\\t\\theight: 600px;\\t\\n\\t}\\n\\t.lang-select {\\n\\t\\twidth: 100px;\\n\\t\\tmargin-right: 10px;\\n\\t}\\n\\theader .btn {\\n\\t\\tmargin: 0 5px;\\n\\t}\\n\\tfooter .btn {\\n\\t\\tmargin: 0 5px;\\n\\t}\\n\\t.editor-footer, .editor-header {\\n\\t\\tmargin: 10px 0;\\n\\t}\\n\\t.cursor {\\n\\t\\tbackground: rgba(0, 250, 0, 0.5);\\n\\t\\tz-index: 40;\\n\\t\\twidth: 2px !important;\\n\\t}\\n}\"","module.exports = \"<section>\\n\\t<header class=\\\"editor-header\\\">\\n\\t\\t<!-- for select language-->\\n\\t\\t<!-- when change, call setLanguage(language)-->\\n\\t\\t<select class=\\\"form-control float-left lang-select\\\" name=\\\"language\\\"  [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n\\n\\t\\t\\t<option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\"> {{language}}\\n\\t\\t\\t</option>\\n\\t\\t</select>\\n\\n\\n\\t\\t<!--reset button -->\\n\\t\\t<!-- Button trigger modal -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\n\\t\\tdata-target=\\\"#myModal\\\">\\n\\t\\t\\tReset\\n\\t\\t</button>\\n\\n\\n\\t\\t<!-- Modal -->\\n\\t\\t<div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\n\\t\\t\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"modal-body\\\">\\n\\t\\t\\t\\t\\t\\tYou will lose current code in the editor, are you sure?\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">\\n\\t\\t\\t\\t\\t\\tReset\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</header>\\n\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-sm-12\\\" id=\\\"editor\\\">\\n\\t\\t\\t<div id=\\\"editor\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<!-- This is the body -->\\n\\t<footer class=\\\"editor-footer\\\">\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">\\n\\t\\tSubmit Solution\\n\\t\\t</button>\\n\\t</footer>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { CollaborationService} from '../../services/collaboration.service';\nimport { ActivatedRoute, Params} from '@angular/router';\ndeclare var ace: any;\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  languages: string[] = ['Java','Python'];\n  language: string = 'Java';\n\n\n\teditor: any;\n\n  defaultContent = {\n    'Java': `public class Example {\n      public static void main(String[] args) {\n      // Type your Java code here\n      }\n}`,\n    'Python': `class Solution:\n    def example():\n      # write your python code here.\n    `\n  };\n\n  sessionId: String;\n\n  constructor(private collaboration: CollaborationService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // use problem id as session id\n    // since we subscribe the changes, every time the params changes\n    // sessionId will be updated and the editor will be initized\n    this.route.params\n      .subscribe(params => {\n        this.sessionId = params['id'];\n        this.initEditor();\n      })\n  }\n\n  initEditor() : void {\n  \tthis.editor = ace.edit(\"editor\");\n  \tthis.editor.setTheme(\"ace/theme/eclipse\");\n  \tthis.editor.getSession().setMode(\"ace/mode/java\");\n    this.editor.setValue(this.defaultContent['Java']);\n\n\n    //setup collaboration socket\n    this.collaboration.init(this.editor, this.sessionId);\n    this.editor.lastAppliedChange = null;\n\n    // registrer change callback\n    this.editor.on(\"change\", (e) => {\n      console.log('editor changes: ' + JSON.stringify(e));\n      if (this.editor.lastAppliedChange != e) {\n        this.collaboration.change(JSON.stringify(e))\n      }\n    })\n\n\n\n  }\n\n  resetEditor(): void {\n    //console.log(this.language);\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());\n\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    let user_code = this.editor.getValue();\n    console.log(user_code);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n\\t<form #formRef=\\\"ngForm\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemName\\\">Problem Name</label>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n\\t\\t\\t\\tname=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n\\t\\t\\t\\t[(ngModel)]=\\\"newProblem.name\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemDesc\\\">Problem Description</label>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n\\t\\t\\tname=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n\\t\\t\\t[(ngModel)]=\\\"newProblem.desc\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"difficulty\\\">Difficulty</label>\\n\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n\\t\\t\\t[(ngModel)]=\\\"newProblem.difficulty\\\">\\n\\t\\t\\t\\t<option *ngFor=\\\"let difficulty of difficulties\\\"\\n\\t\\t\\t\\t\\t[value]=\\\"difficulty\\\">\\n\\t\\t\\t\\t\\t{{difficulty}}\\n\\t\\t\\t\\t</option>\\n\\t\\t\\t</select>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\"\\n\\t\\t\\t\\t(click)=\\\"addProblem()\\\">\\n\\t\\t\\t\\tAdd problem</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\n\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n\tid: 0,\n\tname: '',\n\tdesc: '',\n\tdifficulty: 'easy'  \n})\n\n\n@Component({\n\tselector: 'app-new-problem',\n\ttemplateUrl: './new-problem.component.html',\n\tstyleUrls: ['./new-problem.component.css']\n})\n\nexport class NewProblemComponent implements OnInit {\n\t// create a shadow copy of problem and assign it to newProblem\n\t// Object.assign() copies property values. If the source value is a reference to an object, it only copies that reference value.\n\tnewProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n\n\tdifficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n\n\n\tconstructor(private dataService: DataService) {}\n\n\tngOnInit() {\n\t}\n\n\t\n\t\n\taddProblem() {\n\n\t\tthis.dataService.addProblem(this.newProblem);\n\n\t\t// assign newProblem a new problem instance\n\t\t// Otherwise newProblem have same reference as the one we added to the list\n\t\t// then when next time add new problem, it will override the problem we have already add into the problem list.\n\t\tthis.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n\t}\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n\\t<div class = \\\"row\\\">\\n\\t\\t<div class=\\\"col-sm-12 col-md-4\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<h2>\\n\\t\\t\\t\\t\\t{{problem.id}}.{{problem.name}}\\n\\t\\t\\t\\t</h2>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t{{problem.desc}}\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"hidden-xs col-sm-12 col-md-8\\\">\\n\\t\\t\\t<app-editor></app-editor> \\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\tproblem: Problem;\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  \tthis.route.params.subscribe(params => {\n  \t\t//this.problem = this.dataService.getProblem(+params['id']);\n  \t  this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n    })\n  }\n\n}\n\n\n\n","module.exports = \".difficulty {\\nmin-width: 65px;\\nmargin-right: 18px;\\n}\\n\\n.label.difficulty {\\npadding-top: 0.6em;\\npadding-bottom: 0.6em;\\ncolor: #fbfdfa;\\nfont-size: 12px;\\n}\\n\\n.title {\\nfont-size: 1.2em;\\n}\\n\\n.diff-easy {\\nbackground-color: #42ebf4;\\n}\\n\\n.diff-medium {\\nbackground-color: #92cf5c;\\n}\\n\\n.diff-hard {\\nbackground-color: #ff4416;\\n}\\n\\n.diff-super{\\nbackground-color: #8d16e2;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-new-problem></app-new-problem>\\n\\t<div class=\\\"list-group\\\">\\n\\t\\t<a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink] = \\\"['/problems',problem.id]\\\">\\n\\n\\t\\t\\t<span class=\\\"{{'text-center rounded float-left label difficulty diff-' +\\n\\t\\t\\t\\tproblem.difficulty.toLocaleLowerCase()}}\\\">\\n\\t\\t\\t\\t{{problem.difficulty}}\\n\\t\\t\\t</span>\\n\\t\\t\\t<strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n\\t\\t</a>\\n\\t</div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  \tthis.getProblems();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n  getProblems() {\n  \tthis.subscriptionProblems = this.dataService.getProblems()\n    .subscribe(problems => this.problems = problems);\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n\n\n  collaborationSocket: any;\n  constructor() { }\n\n  init(editor: any, sessionId: string): void{\n  \tthis.collaborationSocket = io(window.location.origin, {query: 'sessionId = ' + sessionId});\n\n  \t// handle the changes sent from server\n  \tthis.collaborationSocket.on(\"change\", (delta: string) => {\n  \t\tconsole.log(\"collabration: editor changes by \" + delta);\n  \t\tdelta = JSON.parse(delta);\n  \t\teditor.lastAppliedChange = delta;\n  \t\teditor.getSession().getDocument().applyDeltas([delta]);\n  \t})\n  }\n\n  change(delta: string): void {\n  \tthis.collaborationSocket.emit(\"change\", delta);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { HttpClient, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport {BehaviorSubject} from 'rxjs'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private _problemSource = new BehaviorSubject<Problem[]>([]) ;\n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        console.log(res);\n        this._problemSource.next(res);\n      })\n      // .catch((err: HttpErrorResponse) => {\n      //   // simple logging, but you can do a lot more, see below\n      //   console.error('An error occurred:', err.error);\n      // });\n      .catch(this.handleError);\n\n      return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n  \treturn this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res:any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders( { 'Content-Type': 'application/json'})};\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res:any) => {\n        this.getProblems();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}